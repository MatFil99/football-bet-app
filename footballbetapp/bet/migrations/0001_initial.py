# Generated by Django 5.1.2 on 2024-12-22 19:46

import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='FootballTeam',
            fields=[
                ('football_team_id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(default=None, max_length=50)),
            ],
            options={
                'db_table': 'football_teams',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='Match',
            fields=[
                ('match_id', models.AutoField(primary_key=True, serialize=False)),
                ('matchday', models.IntegerField()),
                ('date', models.DateTimeField(null=True)),
                ('season', models.CharField(max_length=9, null=True)),
                ('home_score', models.IntegerField(null=True)),
                ('away_score', models.IntegerField(null=True)),
                ('away_team', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='away_matches', to='bet.footballteam')),
                ('home_team', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='home_matches', to='bet.footballteam')),
            ],
            options={
                'db_table': 'matches',
            },
        ),
        migrations.CreateModel(
            name='MatchPrediction',
            fields=[
                ('match_prediction_id', models.AutoField(primary_key=True, serialize=False)),
                ('home_score_prediction', models.IntegerField(null=True)),
                ('away_score_prediction', models.IntegerField(null=True)),
                ('points', models.IntegerField(null=True)),
                ('match', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='match_predictions', to='bet.match')),
                ('user', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='user_predictions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'match_predictions',
                'unique_together': {('match_id', 'user_id')},
            },
        ),
    ]
